{"title":"差分基础","date":"2018-10-23T14:47:06.000Z","slug":"chafen","tags":["知识梳理"],"updated":"2018-10-24T16:26:24.456Z","content":"<h2 id=\"Warning：本文可能存在通篇胡说或抄袭现象，请非战斗人员尽快撤离\"><a href=\"#Warning：本文可能存在通篇胡说或抄袭现象，请非战斗人员尽快撤离\" class=\"headerlink\" title=\"Warning：本文可能存在通篇胡说或抄袭现象，请非战斗人员尽快撤离\"></a>Warning：本文可能存在通篇胡说或抄袭现象，请非战斗人员尽快撤离</h2><h3 id=\"关于差分\"><a href=\"#关于差分\" class=\"headerlink\" title=\"关于差分\"></a>关于差分</h3><p>在神怜看来，差分——至少是神怜如今学习到的基础部分——其核心在于对“差”的维护上<br>具体概念请自行baidu<del>因为神怜并不会</del><br>对于一个正常的（维护对象）数组 <em>a</em> ,其差分数组 <em>d</em> 的构造方式为</p>\n<blockquote>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">int</span>;i=<span class=\"number\">1</span>;i&lt;=num;i++)<span class=\"comment\">//num是数组a长度//这里的数组下标从1开始</span></span><br><span class=\"line\">\td[i]=a[i]-a[i<span class=\"number\">-1</span>];</span><br></pre></td></tr></table></figure>\n</blockquote>\n<p>相信大家可以发现，事实上该数组维护的就是前后2个数的差</p>\n<p>即对应关系为</p>\n<div class=\"article-bounded\"><div class=\"article-table\"><table>\n<thead>\n<tr>\n<th style=\"text-align:center\">b[1]</th>\n<th style=\"text-align:center\">b[2]</th>\n<th style=\"text-align:center\">…</th>\n<th style=\"text-align:center\">b[i]</th>\n<th style=\"text-align:center\">…</th>\n<th style=\"text-align:center\">b[num]</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">a[1]-a[0]</td>\n<td style=\"text-align:center\">a[2]-a[1]</td>\n<td style=\"text-align:center\">…</td>\n<td style=\"text-align:center\">a[i]-a[i-1]</td>\n<td style=\"text-align:center\">…</td>\n<td style=\"text-align:center\">a[num]-a[num-1]</td>\n</tr>\n</tbody>\n</table></div></div>\n<p>并由此易得： <em> b[1]+b[2]=a[1]-a[0]+a[2]-a[1]=a[2]-a[0] </em><br>同理可得       <em> b[1]+b[2]+b[3]=a[1]-a[0]+a[2]-a[1]+a[3]-a[2]=a[3]-a[0] </em><br>以此类推—— <em>b[1]+b[2]+…+b[n]=a[n]-a[0]</em><br>又∵ a[0]=0<br>∴ a[n]=b[1]+b[2]+…+b[n] 即若要知道 a数组中某数的值，只要查询 b数组中的前缀和即可<del>我不知道具体怎么说，就含糊一点吧……</del></p>\n<h4 id=\"但是……这又有什么用呢？\"><a href=\"#但是……这又有什么用呢？\" class=\"headerlink\" title=\"但是……这又有什么用呢？\"></a>但是……<del>这又有什么用呢？</del></h4><p>神怜最初就是这样想的，但看到LXXgX上的一道树状数组模板题后就发现了自己的错误——区间修改+单点查询</p>\n<h4 id=\"若您没有学习过树状数组相关知识，请先学习或点击此处查看神怜的另一篇blog\"><a href=\"#若您没有学习过树状数组相关知识，请先学习或点击此处查看神怜的另一篇blog\" class=\"headerlink\" title=\"若您没有学习过树状数组相关知识，请先学习或点击此处查看神怜的另一篇blog\"></a>若您没有学习过树状数组相关知识，请先学习或点击此处查看神怜的另一篇blog</h4><blockquote>\n<p>某同学：既然最基础的树状数组就支持单点修改+区间查询，只要将区间修改转化为若干个单点修改，单点查询转化为头尾指针相同的区间查询就好了嘛QAQ<br>神怜：是这样说没错啊，可是……神怜还没到TLE的年纪啊</p>\n</blockquote>\n<p>咳咳，已知树状数组修改与查询的时间复杂度均为 $O(log(n))$ ,若按上述的方法，则区间修改时间复杂度增加至 $O(nlog(n))$ ,加上复数次数操作的操作，则近似于 $O(n^2 log(n))$ <del>神怜选择用暴力解决</del></p>\n<p>这时就要用到上面的差分了(进入正题)<br>显然，上面介绍的差分数组 $d$ 可用于，查询第 $i$ 个数，但同时也要用于区间修改。</p>\n<p>来看一组栗子：</p>\n<blockquote>\n<p>对于a[3]~a[5]中的每个数加上3</p>\n</blockquote>\n<p>先不急着分析如何解决这个问题本身，先看看我们实现单点查询的方式</p>\n<p>由上面推导出的规律(还记得吗，如果记不清了可以先回去看2~3min呢……)可知，对一个数 $a[i]$ ，只要查询 $b[1]~b[n]$ 的和即前缀和，是不是感觉很熟悉？</p>\n<p>没错，这就是最基础的树状数组的思想，只是维护对象由原数组 $a$ 改为了差分数组 $b$ ，因此自然很好实现，操作方法在此便不再赘述了</p>\n<p>接下来转回正题——如何实现区间修改？</p>\n<p>既然区间修改的结果——数组中数值的变化——是由区间查询体现出来的，则区间修改实际要做的事是保证区间查询的正确性</p>\n<p>假设已经修改结束了，则查询 $a[3]$ 的结果应由 $b[1]+b[2]+b[3]$ 变为 $b[1]+b[2]+b[3]+3$ （为了叙述方便，暂时不将b数组进行实际修改，即此处的 $b$ 实际上是修改前的数组）,则 $b[1]~b[3]$ 这几个数一共比原来多了“3”<br>依此类推，查询 $a[4]$ 的结果应由 $b[1]+b[2]+b[3]+b[4]$ 变为 $b[1]+b[2]+b[3]+b[4]+3$，则 $b[1]~b[4]$ 这几个数一共也比原来多了“3”</p>\n<p>既然 $b[1]~b[3]$ 的变化量 = $b[1]~b[4]$ 的变化量，显然，b[4]没有发生变化，并以此类推一直到b[5]——修改区间的尾指针所对应的b数组中数——都没有发生变化。</p>\n<p>但显然，既然区间修改已经进行， $b$ 数组自然不会一成不变。</p>\n<p>当前已知，在 $b[1]~b<a href=\"即区间修改的头指针所对应的b数组中数\">3</a>$ 这段区间内共增加了“3”，且 原数组的 $a[1]~a[2]（即区间修改的头指针-1所对应的b数组中数）$并没有发生改变，即 $b[1]$ 不变， $b[1]+b[2]$ 不变，因此真正修改的数为 b[3]。</p>\n","next":{"title":"哈希基础","slug":"hash"},"link":"http://yoursite.com/post/chafen/","toc":[{"title":"Warning：本文可能存在通篇胡说或抄袭现象，请非战斗人员尽快撤离","id":"Warning：本文可能存在通篇胡说或抄袭现象，请非战斗人员尽快撤离","index":"1","children":[{"title":"关于差分","id":"关于差分","index":"1.1","children":[{"title":"但是……<del>这又有什么用呢？</del>","id":"但是……这又有什么用呢？","index":"1.1.1"},{"title":"若您没有学习过树状数组相关知识，请先学习或点击此处查看神怜的另一篇blog","id":"若您没有学习过树状数组相关知识，请先学习或点击此处查看神怜的另一篇blog","index":"1.1.2"}]}]}]}