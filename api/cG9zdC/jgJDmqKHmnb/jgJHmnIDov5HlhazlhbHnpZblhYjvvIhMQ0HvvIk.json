{"title":"P3379【模板】最近公共祖先（LCA）","date":"2018-10-21T11:02:53.000Z","slug":"【模板】最近公共祖先（LCA）","tags":["Luogu","模板"],"updated":"2018-10-27T15:20:26.712Z","content":"<h2 id=\"题面\"><a href=\"#题面\" class=\"headerlink\" title=\"题面\"></a>题面</h2><h3 id=\"题目描述\"><a href=\"#题目描述\" class=\"headerlink\" title=\"题目描述\"></a>题目描述</h3><p> 如题，给定一棵有根多叉树，请求出指定两个点直接最近的公共祖先。</p>\n<h3 id=\"输入输出格式\"><a href=\"#输入输出格式\" class=\"headerlink\" title=\"输入输出格式\"></a>输入输出格式</h3><h4 id=\"输入格式：\"><a href=\"#输入格式：\" class=\"headerlink\" title=\"输入格式：\"></a>输入格式：</h4><p>第一行包含三个正整数N、M、S，分别表示树的结点个数、询问的个数和树根结点的序号。<br>接下来N-1行每行包含两个正整数x、y，表示x结点和y结点之间有一条直接连接的边（数据保证可以构成树）。<br>接下来M行每行包含两个正整数a、b，表示询问a结点和b结点的最近公共祖先。</p>\n<h4 id=\"输出格式：\"><a href=\"#输出格式：\" class=\"headerlink\" title=\"输出格式：\"></a>输出格式：</h4><p>输出包含M行，每行包含一个正整数，依次为每一个询问的结果。</p>\n<h3 id=\"输入输出样例\"><a href=\"#输入输出样例\" class=\"headerlink\" title=\"输入输出样例\"></a>输入输出样例</h3><p>输入样例#1：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">5 5 4</span><br><span class=\"line\">3 1</span><br><span class=\"line\">2 4</span><br><span class=\"line\">5 1</span><br><span class=\"line\">1 4</span><br><span class=\"line\">2 4</span><br><span class=\"line\">3 2</span><br><span class=\"line\">3 5</span><br><span class=\"line\">1 2</span><br><span class=\"line\">4 5</span><br></pre></td></tr></table></figure></p>\n<p>输出样例#1：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">4</span><br><span class=\"line\">4</span><br><span class=\"line\">1</span><br><span class=\"line\">4</span><br><span class=\"line\">4</span><br></pre></td></tr></table></figure></p>\n<blockquote>\n<h3 id=\"说明\"><a href=\"#说明\" class=\"headerlink\" title=\"说明\"></a>说明</h3><p>时空限制：1000ms,128M<br>数据规模：<br>对于30%的数据：N&lt;=10，M&lt;=10<br>对于70%的数据：N&lt;=10000，M&lt;=10000<br>对于100%的数据：N&lt;=500000，M&lt;=500000</p>\n</blockquote>\n<hr>\n<p>LCA一直以来是我比较苦恼<del>懒得看</del>的内容之一，周末抽空看了一下。</p>\n<h2 id=\"Warning：本篇可能有大量假冒伪劣内容\"><a href=\"#Warning：本篇可能有大量假冒伪劣内容\" class=\"headerlink\" title=\"Warning：本篇可能有大量假冒伪劣内容\"></a>Warning：本篇可能有大量假冒伪劣内容</h2><p>关于变量：</p>\n<blockquote>\n<p>fa[site][tim]表示当前所在的数site向上跳 $2^tim$ 次后到达的数<br>lg[x]表示 $log_2(x)$ 向下取整后+1的 值 <del>QAQ不会打log</del><br>depth[site]表示当前数site的深度</p>\n</blockquote>\n<p>完整的Code://结合Code后才 可食用//QAQ我还是美国<br><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> maxpoint 500010</span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"keyword\">int</span> po_int,qu_es,ro_ot;</span><br><span class=\"line\"><span class=\"keyword\">int</span> tim;</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">node</span>&#123;</span></span><br><span class=\"line\">\t<span class=\"keyword\">int</span> u,v,next;</span><br><span class=\"line\">&#125;a[<span class=\"number\">2</span>*maxpoint+<span class=\"number\">10</span>];<span class=\"comment\">//已知在树中边数==节点数-1，因此可以直接用maxpoint ,又因为每条边要存2遍，所以再*2 </span></span><br><span class=\"line\"><span class=\"keyword\">int</span> head[maxpoint];</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">add</span><span class=\"params\">(<span class=\"keyword\">int</span> u,<span class=\"keyword\">int</span> v)</span></span>&#123;</span><br><span class=\"line\">\ttim++;</span><br><span class=\"line\">\ta[tim].v=v;<span class=\"comment\">//a[tim].u=u;</span></span><br><span class=\"line\">\ta[tim].next=head[u];head[u]=tim;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">int</span> depth[maxpoint];</span><br><span class=\"line\"><span class=\"keyword\">int</span> lg[maxpoint]; </span><br><span class=\"line\"><span class=\"keyword\">int</span> fa[maxpoint][<span class=\"number\">23</span>];</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">dfs</span><span class=\"params\">(<span class=\"keyword\">int</span> x,<span class=\"keyword\">int</span> fa_th)</span></span>&#123;</span><br><span class=\"line\">\tdepth[x]=depth[fa_th]+<span class=\"number\">1</span>;</span><br><span class=\"line\">\tfa[x][<span class=\"number\">0</span>]=fa_th;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;(<span class=\"number\">1</span>&lt;&lt;i)&lt;=depth[x];i++)</span><br><span class=\"line\">\t\tfa[x][i]=fa[fa[x][i<span class=\"number\">-1</span>]][i<span class=\"number\">-1</span>];</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i=head[x];i;i=a[i].next)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (a[i].v!=fa_th) dfs(a[i].v,x);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">lca</span><span class=\"params\">(<span class=\"keyword\">int</span> x,<span class=\"keyword\">int</span> y)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (depth[x]&lt;depth[y])</span><br><span class=\"line\">\t\tswap(x,y);</span><br><span class=\"line\">\t<span class=\"keyword\">while</span>(depth[x]&gt;depth[y])</span><br><span class=\"line\">\t\tx=fa[x][lg[depth[x]-depth[y]]<span class=\"number\">-1</span>];</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (x==y)<span class=\"keyword\">return</span> x;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> k=lg[depth[x]]<span class=\"number\">-1</span>;k&gt;=<span class=\"number\">0</span>;k--)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (fa[x][k]!=fa[y][k])</span><br><span class=\"line\">\t\t\tx=fa[x][k],y=fa[y][k];</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> fa[x][<span class=\"number\">0</span>];</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">int</span> <span class=\"title\">read</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> w=<span class=\"number\">1</span>,x=<span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">char</span> ch=<span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span> (ch&lt;<span class=\"string\">'0'</span>||ch&gt;<span class=\"string\">'9'</span>)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (ch==<span class=\"string\">'-'</span>) w=<span class=\"number\">-1</span>;</span><br><span class=\"line\">\t\tch=getchar();</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span>(ch&gt;=<span class=\"string\">'0'</span>&amp;&amp;ch&lt;=<span class=\"string\">'9'</span>)&#123;</span><br><span class=\"line\">\t\tx=(x&lt;&lt;<span class=\"number\">1</span>)+(x&lt;&lt;<span class=\"number\">3</span>)+ch-<span class=\"string\">'0'</span>;</span><br><span class=\"line\">\t\tch=getchar();</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> x*w;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">void</span> _write(<span class=\"keyword\">int</span> x)&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (x/<span class=\"number\">10</span>&gt;<span class=\"number\">0</span>) _write(x/<span class=\"number\">10</span>);</span><br><span class=\"line\">\t<span class=\"built_in\">putchar</span>(x%<span class=\"number\">10</span>+<span class=\"string\">'0'</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">write</span><span class=\"params\">(<span class=\"keyword\">int</span> x)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (x&lt;<span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">putchar</span>(<span class=\"string\">'-'</span>);</span><br><span class=\"line\">\t\tx=-x;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t_write(x);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"comment\">//freopen(\"ans.txt\",\"w\",stdout);</span></span><br><span class=\"line\">\t<span class=\"comment\">//cin&gt;&gt;po_int&gt;&gt;qu_es&gt;&gt;ro_ot;</span></span><br><span class=\"line\">\tpo_int=read();qu_es=read();ro_ot=read();</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> x,y;</span><br><span class=\"line\">\tlg[<span class=\"number\">0</span>]=<span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=po_int;i++)</span><br><span class=\"line\">\t\tlg[i]=lg[i<span class=\"number\">-1</span>]+(<span class=\"number\">1</span>&lt;&lt;lg[i<span class=\"number\">-1</span>]==i);</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;po_int;i++)&#123;</span><br><span class=\"line\">\t\tx=read();y=read();<span class=\"comment\">//cin&gt;&gt;x&gt;&gt;y;</span></span><br><span class=\"line\">\t\tadd(x,y);add(y,x);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tdfs(ro_ot,<span class=\"number\">0</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=qu_es;i++)&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">cin</span>&gt;&gt;x&gt;&gt;y;</span><br><span class=\"line\">\t\twrite(lca(x,y)); <span class=\"built_in\">putchar</span>(<span class=\"string\">'\\n'</span>);<span class=\"comment\">//printf(\"%d\\n\",lca(x,y)); //cout&lt;&lt;lca(x,y)&lt;&lt;endl;</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<hr>\n<h3 id=\"Update-2018-10-27\"><a href=\"#Update-2018-10-27\" class=\"headerlink\" title=\"Update: 2018/10/27\"></a>Update: 2018/10/27</h3><p>差不多照着原来的代码打了一遍，竟然A了？？？<br><del>神怜今天比较欧？</del></p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> REP(i,a,b) for (int i=(a);i&lt;=(b);++i)</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> REP_(i,a,b) for (int i=(a);i&gt;=(b);--i)</span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">int</span> <span class=\"title\">read</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> w=<span class=\"number\">1</span>,x=<span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">char</span> ch=<span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span> (ch&lt;<span class=\"string\">'0'</span>||ch&gt;<span class=\"string\">'9'</span>)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (ch==<span class=\"string\">'-'</span>) w=<span class=\"number\">-1</span>;</span><br><span class=\"line\">\t\tch=getchar();</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span>(ch&gt;=<span class=\"string\">'0'</span>&amp;&amp;ch&lt;=<span class=\"string\">'9'</span>)&#123;</span><br><span class=\"line\">\t\tx=(x&lt;&lt;<span class=\"number\">1</span>)+(x&lt;&lt;<span class=\"number\">3</span>)+ch-<span class=\"string\">'0'</span>;</span><br><span class=\"line\">\t\tch=getchar();</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> x*w;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> _write(<span class=\"keyword\">int</span> x)&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (x/<span class=\"number\">10</span>&gt;<span class=\"number\">0</span>) _write(x/<span class=\"number\">10</span>);</span><br><span class=\"line\">\t<span class=\"built_in\">putchar</span>(x%<span class=\"number\">10</span>+<span class=\"string\">'0'</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">write</span><span class=\"params\">(<span class=\"keyword\">int</span> x)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (x&lt;<span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">putchar</span>(<span class=\"string\">'-'</span>);</span><br><span class=\"line\">\t\tx=-x;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t_write(x);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">int</span> po_int,qu_es,num;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> maxpoint 500010</span></span><br><span class=\"line\"><span class=\"keyword\">int</span> tim,head[maxpoint];</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">node</span>&#123;</span></span><br><span class=\"line\">\t<span class=\"keyword\">int</span> v,next;</span><br><span class=\"line\">&#125;a[<span class=\"number\">2</span>*maxpoint];</span><br><span class=\"line\"><span class=\"keyword\">int</span> f[maxpoint][<span class=\"number\">29</span>];</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">add</span><span class=\"params\">(<span class=\"keyword\">int</span> u,<span class=\"keyword\">int</span> v)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"comment\">//a[++tim].u=u;a[tim].v=v;</span></span><br><span class=\"line\">\ta[++tim].v=v;</span><br><span class=\"line\">\ta[tim].next=head[u];head[u]=tim;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">int</span> depth[maxpoint];</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">dfs</span><span class=\"params\">(<span class=\"keyword\">int</span> root,<span class=\"keyword\">int</span> fa_th)</span></span>&#123;</span><br><span class=\"line\">\tdepth[root]=depth[fa_th]+<span class=\"number\">1</span>;</span><br><span class=\"line\">\tf[root][<span class=\"number\">0</span>]=fa_th;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;(<span class=\"number\">1</span>&lt;&lt;i)&lt;=depth[root];++i)&#123;</span><br><span class=\"line\">\t\tf[root][i]=f[f[root][i<span class=\"number\">-1</span>]][i<span class=\"number\">-1</span>];</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> v;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i=head[root];i;i=a[i].next)&#123;</span><br><span class=\"line\">\t\tv=a[i].v;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (v!=fa_th) dfs(v,root);</span><br><span class=\"line\">\t\t<span class=\"comment\">//if (v==fa_th) continue;//警告！这样有奇怪的错误（因为我脸黑？） </span></span><br><span class=\"line\">\t\t<span class=\"comment\">//dfs(v,root);</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">int</span> lg[maxpoint];</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">lca</span><span class=\"params\">(<span class=\"keyword\">int</span> x,<span class=\"keyword\">int</span> y)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (depth[x]&lt;depth[y]) swap(x,y);</span><br><span class=\"line\">\t<span class=\"keyword\">while</span> (depth[x]&gt;depth[y])&#123;</span><br><span class=\"line\">\t\tx=f[x][lg[depth[x]-depth[y]]<span class=\"number\">-1</span>];<span class=\"comment\">//x=f[x][lg[depth[y]-depth[x]-1];</span></span><br><span class=\"line\">\t\t<span class=\"comment\">//警告！ </span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (x==y) <span class=\"keyword\">return</span> x;</span><br><span class=\"line\">\tREP_(k,lg[depth[x]]<span class=\"number\">-1</span>,<span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (f[x][k]!=f[y][k])</span><br><span class=\"line\">\t\t\tx=f[x][k],y=f[y][k];</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> f[x][<span class=\"number\">0</span>];</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\tpo_int=read();qu_es=read();num=read();</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> x,y;</span><br><span class=\"line\">\tREP(i,<span class=\"number\">1</span>,po_int<span class=\"number\">-1</span>)&#123;</span><br><span class=\"line\">\t\tx=read();y=read();</span><br><span class=\"line\">\t\tadd(x,y);add(y,x);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tlg[<span class=\"number\">0</span>]=<span class=\"number\">0</span>;</span><br><span class=\"line\">\tREP(i,<span class=\"number\">1</span>,po_int) lg[i]=lg[i<span class=\"number\">-1</span>]+(<span class=\"number\">1</span>&lt;&lt;lg[i<span class=\"number\">-1</span>]==i);</span><br><span class=\"line\">\tdfs(num,<span class=\"number\">0</span>);</span><br><span class=\"line\">\tREP(i,<span class=\"number\">1</span>,qu_es)&#123;</span><br><span class=\"line\">\t\tx=read();y=read();</span><br><span class=\"line\">\t\twrite(lca(x,y));</span><br><span class=\"line\">\t\t<span class=\"built_in\">putchar</span>(<span class=\"string\">'\\n'</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","prev":{"title":"P3372 【模板】线段树 1","slug":"【模板】线段树 1"},"next":{"title":"做题记录","slug":"history"},"link":"http://yoursite.com/post/【模板】最近公共祖先（LCA）/","toc":[{"title":"题面","id":"题面","index":"1","children":[{"title":"题目描述","id":"题目描述","index":"1.1"},{"title":"输入输出格式","id":"输入输出格式","index":"1.2","children":[{"title":"输入格式：","id":"输入格式：","index":"1.2.1"},{"title":"输出格式：","id":"输出格式：","index":"1.2.2"}]},{"title":"输入输出样例","id":"输入输出样例","index":"1.3"},{"title":"说明","id":"说明","index":"1.4"}]},{"title":"Warning：本篇可能有大量假冒伪劣内容","id":"Warning：本篇可能有大量假冒伪劣内容","index":"2","children":[{"title":"Update: 2018/10/27","id":"Update-2018-10-27","index":"2.1"}]}]}